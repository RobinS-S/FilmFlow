@page "/reservations"
@using FilmFlow.Shared.Dto;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@inherits BaseComponent
@attribute [Authorize]
<h3>@Localizer["Reservations"]</h3>

@if(reservations != null)
{
    <div class="row p-3">
        @foreach(var reservation in reservations)
        {
            <div class="col-sm-12 col-md-6 col-lg-3">
                <div class="card m-4 p-0" style="background-color: #ffffff96;">
		            <div class="card-body">
                        <h5 class="card-title">@reservation.CinemaShow?.Movie?.Title</h5>
                        <h6 class="card-subtitle mb-2 text-muted"><strong>@reservation.CinemaShow?.Start.ToShortDateString() @reservation.CinemaShow?.Start.ToShortTimeString() - @reservation.CinemaShow?.End.ToShortTimeString()</strong></h6>
                        <a href="reservations/@reservation.Id" class="btn btn-danger">@Localizer["Details"]</a>
		            </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <h4>@Localizer["Loading"]...</h4>
}


@code {
    private IEnumerable<ReservationDto>? reservations;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var reservationDtos = await AuthorizedHttpClient.Client.GetFromJsonAsync<List<ReservationDto>>(ApiCallUrls.Reservations());
            if (reservationDtos != null)
            {
                reservations = reservationDtos.OrderByDescending(r => r.Id);
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}