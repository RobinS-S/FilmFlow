@page "/reservations"
@using FilmFlow.Shared.Dto;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@inherits BaseComponent
@attribute [Authorize]
<h3>@Localizer["Reservations"]</h3>

@if(_reservations != null)
{
	<div class="row p-3">
        @if (_reservations.Any())
        {
	        @foreach (var reservation in _reservations)
	        {
		        <div class="col-sm-12 col-md-6 col-lg-3">
			        <div class="card m-4 p-0" style="background-color: #ffffff96;">
				        <div class="card-body">
					        <h5 class="card-title">@reservation.CinemaShow?.Movie?.Title</h5>
					        <h6 class="card-subtitle mb-2 text-muted"><strong>@reservation.CinemaShow?.Start.ToShortDateString() @reservation.CinemaShow?.Start.ToShortTimeString() - @reservation.CinemaShow?.End.ToShortTimeString()</strong></h6>
					        <a href="reservations/@reservation.Id" class="btn btn-danger">@Localizer["Details"]</a>
				        </div>
			        </div>
		        </div>
	        }
        }
        else
        {
	        <div class="col-12">
                <h4>@Localizer["NoReservations"]</h4>
	        </div>
        }
	</div>
}
else
{
    <h4>@Localizer["Loading"]...</h4>
}


@code {
    private IEnumerable<ReservationDto>? _reservations;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var reservationDtos = await AuthorizedHttpClient.Client.GetFromJsonAsync<List<ReservationDto>>(ApiCallUrls.Reservations());
            if (reservationDtos != null)
            {
                _reservations = reservationDtos.OrderByDescending(r => r.Id);
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}