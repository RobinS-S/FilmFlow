@page "/reservations/{id:long}"
@using FilmFlow.Shared.Dto;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@inherits BaseComponent
@attribute [Authorize]
<h3>@Localizer["Reservation"]</h3>

@if(_reservation != null)
{
    <div class="row p-3">
        <div class="card m-4 p-0" style="background-color: #ffffff96;">
            <div class="card-body">
                <h5 class="card-title">@_reservation.CinemaShow?.Movie?.Title</h5>
                <h6 class="card-subtitle mb-2 text-muted"><strong>@_reservation.CinemaShow?.Start.ToShortDateString() @_reservation.CinemaShow?.Start.ToShortTimeString() - @_reservation.CinemaShow?.End.ToShortTimeString()</strong></h6>
                <p class="card-text"><strong>@Localizer["ChairsReserved"]:</strong> @string.Join(", ", _reservation.ReservedSeats.Select(rs => $"{Localizer["Row"]} {rs.Seat.ParentRowId} {Localizer["Seat"]} {rs.Seat.SeatNumber}"))</p>
                <div class="btn-group" role="group" aria-label="@Localizer["Reservation"]">
                    <a href="reservations/@Id/pay" class="btn btn-danger">@Localizer["PayNow"]</a>
                    <a href="reservations/@Id/tickets" class="btn btn-info">@Localizer["Tickets"]</a>
		        </div>
            </div>
        </div>
    </div>
}
else
{
    <h4>@Localizer["Loading"]...</h4>
}

@code {
    [Parameter]
    public long Id { get; set; }

    private ReservationDto? _reservation;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _reservation = await AuthorizedHttpClient.Client.GetFromJsonAsync<ReservationDto>(ApiCallUrls.ReservationById(Id));
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}