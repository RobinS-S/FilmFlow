@page "/reservations/{id:long}/tickets"
@using FilmFlow.Shared.Dto;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@inherits BaseComponent
@attribute [Authorize]
<h3>@Localizer["Tickets"]</h3>

@if (_reservation != null && _hall != null)
{
	<h5>@_reservation.CinemaShow?.Movie?.Title</h5>
	<h6 class="mb-2 text-muted"><strong>@_reservation.CinemaShow?.Start.ToShortDateString() @_reservation.CinemaShow?.Start.ToShortTimeString() - @_reservation.CinemaShow?.End.ToShortTimeString()</strong></h6>
	
	@if(_reservation.IsPaid)
	{
		<div class="row">
			@foreach (var reservedSeat in _reservation.ReservedSeats)
			{
				@if(reservedSeat.Ticket != null)
				{
					<div class="col m-1">
						<div class="card" style="background-color: #ffffff96;">
							<div class="card-body">
								<h6 class="card-subtitle text-muted"><strong>@(_hall.IsThreeDimensional ? "3D" : "")</strong></h6>
								<p class="card-text">@Localizer["Row"] @_hall.Rows.Single(hr => hr.Id == reservedSeat.Seat.ParentRowId).RowId, @Localizer["Seat"] @reservedSeat.Seat.SeatNumber</p>
								<div class="d-flex-row">
									<div class="d-flex justify-content-center">
										<img src="@ApiCallUrls.TicketQrByCode(_reservation.Id, reservedSeat.Ticket.Code)"/>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
			}			
		</div>
	}
	else
	{
		<h3>@Localizer["ReservationNotPaidYet"]</h3>
		<a href="reservations/@_reservation.Id/pay" class="btn btn-danger">@Localizer["PayNow"]</a>
	}
}
else
{
	<h4>@Localizer["Loading"]...</h4>
}

@code {
	[Parameter]
	public long Id { get; set; }

	private ReservationDto? _reservation;
	private CinemaHallDto? _hall;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			_reservation = await AuthorizedHttpClient.Client.GetFromJsonAsync<ReservationDto>(ApiCallUrls.ReservationById(Id));
			if(_reservation != null)
			{
				_hall = await AnonymousHttpClient.Client.GetFromJsonAsync<CinemaHallDto>(ApiCallUrls.CinemaHallById(_reservation.CinemaShow!.CinemaHallId));
			}
		}
		catch (AccessTokenNotAvailableException exception)
		{
			exception.Redirect();
		}
	}
}