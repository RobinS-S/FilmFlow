@page "/movie/{id:long}"
@using FilmFlow.Shared.Dto
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using FilmFlow.Shared
@inject NavigationManager NavigationHelper
@using System.Web
@inject HttpClient Http
@inherits BaseComponent

@if (Movie != null)
{
	<div class="row p-3">
		<div class="col-sm-12 col-md-6 col-lg-3">
			<div class="card m-4" style="width: 18rem; border: 0px; background-color: #ffffff96; padding: 0px !important;">
				<img src="@Movie.ImageUrl" class="card-img-top" alt="...">
				<div class="card-body">
					<h5 class="card-title">@Movie.Title</h5>
					<ul>
						<li>@Localizer["Category"]: @Movie.Category</li>
						<li>@Localizer["AgeRating"]: @Movie.MinAge</li>
						<li>@Localizer["Language"]: @Movie.Language</li>
					</ul>
					<p class="card-text">@Movie.Description</p>
				</div>
			</div>
		</div>
		<div class="col-sm-12 col-md-6 col-lg-9">
			<div class="text-center row p-3">
				<div class="col-12"><h3>@Localizer["UpcomingShow"]</h3></div>
				@if (Shows != null)
				{
					@foreach (var show in Shows)
					{
						<div class="col-sm-12 col-md-12 col-lg-4">
							<div class="card p-3 m-3" style="width: 18rem; border: 0px; background-color: #ffffff96;">
								<div class="card-body">
									<h5 class="card-title">Zaal @show.CinemaHallId</h5>
									<h6 class="card-subtitle mb-2 text-muted">@show.Start.ToShortDateString()</h6>
									<p class="card-text">@show.Start.ToShortTimeString() - @show.End.ToShortTimeString()</p>
									<a href="cinemashow/@show.Id" class="btn btn-danger">@Localizer["ReserveNow"]</a>
								</div>
							</div>
						</div>
					}
				}
				else
				{
					<h4>@Localizer["Loading"]...</h4>
				}
			</div>
		</div>
	</div>
}
else
{
	<h4>@Localizer["Loading"]...</h4>
}

@code {
	[Parameter]
	public long id { get; set; }

	private MovieDto? Movie;
	private CinemaShowDto[]? Shows;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			Movie = await Http.GetFromJsonAsync<MovieDto>($"/api/Movies/{id}");
			var shows = await Http.GetFromJsonAsync<CinemaShowDto[]>($"/api/Movies/{id}/shows");
			if (shows != null) Shows = shows.OrderBy(s => s.Start).ToArray();
		}
		catch (AccessTokenNotAvailableException exception)
		{
			exception.Redirect();
		}
	}
}
