trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'


- task: DotNetCoreCLI@2
  displayName: Manifest for tool
  inputs:
    command: custom
    custom: "new "
    arguments: tool-manifest

- task: DotNetCoreCLI@2
  displayName: Install EFTool
  inputs:
    command: custom
    custom: "tool "
    arguments: install dotnet-ef
    
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**/bin/$(BuildConfiguration)/**/*.Tests.dll'


- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'

- task: DotNetCoreCLI@2
  displayName: Create SQL Scripts
  inputs:
    command: custom
    custom: "ef "
    arguments: migrations script --output SQL/migrations.sql --idempotent --startup-project API/FilmFlow.API.csproj --project API/FilmFlow.API.csproj

- task: PublishBuildArtifacts@1
  displayName: "Publish Artifact SQLScripts"
  inputs:
    PathtoPublish: SQL/migrations.sql
    ArtifactName: api-sql
